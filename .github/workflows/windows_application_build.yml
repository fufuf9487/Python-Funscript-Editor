name: Release Windows Executable

on:
  push:
    tags:
      - '*'

jobs:
  miniconda:
    name: Miniconda ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
        matrix:
            os: ["windows-latest"]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: build
          environment-file: environment_windows.yaml
          python-version: 3.9
          auto-activate-base: false
      - name: Collect Conda Info
        shell: bash -l {0}
        run: |
          conda info
          conda env export
      - name: Get Application Version
        id: get_version
        uses: battila7/get-version-action@v2
      - name: Build Application Documentation
        shell: bash -l {0}
        run: |
          cd docs/app
          mkdocs build
          cd ../..
      - name: Build Application
        shell: bash -l {0}
        run: |
          pyinstaller --add-data="funscript_editor/config/*;funscript_editor/config" --add-data="assets/*;." --hidden-import "pynput.keyboard._win32" --hidden-import "pynput.mouse._win32" --noupx --icon=icon.ico funscript-editor.py
      - name: Move Documentation to Application Build Directory
        shell: bash -l {0}
        run: |
          mv "docs/app/site" "dist/funscript-editor/funscript_editor/docs"
      - name: Add Version to Build
        shell: bash -l {0}
        run: |
          echo "${{ steps.get_version.outputs.version }}" > dist/funscript-editor/funscript_editor/VERSION.txt
      - name: Create Asset Archive
        uses: papeloto/action-zip@v1
        with:
          files: dist/funscript-editor
          recursive: true
          dest: funscript-editor_${{ steps.get_version.outputs.version }}.zip
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          release_name: ${{ steps.get_version.outputs.version }}
          draft: true
          prerelease: true
      - name: Upload Windows Build Asset
        id: upload-release-asset-1
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./funscript-editor_${{ steps.get_version.outputs.version }}.zip
          asset_name: funscript-editor_${{ steps.get_version.outputs.version }}.zip
          asset_content_type: application/zip
      - name: Upload OFS Integration Asset
        id: upload-release-asset-2
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./contrib/OpenFunscripter/funscript_generator_windows.lua
          asset_name: funscript_generator_windows.lua
          asset_content_type: application/octet-stream
